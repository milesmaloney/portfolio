{"version":3,"sources":["Header.jsx","SidebarEntry.jsx","Sidebar.jsx","Footer.jsx","ProjectEntry.jsx","ProjectMain.jsx","LocalClock.jsx","ImageScroller.jsx","Assets/images/img0.jpg","Assets/images/img1.jpg","Assets/images/img2.jpg","Assets/images/img3.jpg","Assets/images/img4.jpg","Assets/images/img5.jpg","Assets/images/img6.jpg","Assets/images/siteImg.png","Assets/gameAssets/warden.png","Assets/gameAssets/warrior.png","Assets/gameAssets/skeleton.png","Assets/gameAssets/cultist.png","Assets/gameAssets/pArcaneMage.png","Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","leftStyle","midStyle","rightStyle","this","divs","left","width","height","position","id","style","content","React","Component","SidebarEntry","bgStyle","Sidebar","bgImages","src","listElements","pcntPerElement","length","i","currStyle","top","push","Math","floor","random","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Footer","footerElements","widthPerElement","ProjectEntry","demoMode","toggleDemoMode","bind","demo","fontSize","mobile","orientation","href","rel","onClick","title","demoText","descriptionStyle","demoTextStyle","bottom","images","imgLinks","widthPerImage","srcLink","target","description","setState","ProjectMain","listEntries","LocalClock","date","Date","timeOrDate","changeState","digitStyles","digitPairs","toLocaleTimeString","replace","split","toLocaleDateString","j","shownDigits","join","timeIntervalID","setInterval","clearInterval","transitionIntervalID","clearTimeout","clockIntervalID","setTimeout","ImageScroller","currentPicture","shuffle","changeImage","toggleShuffle","scrollerStyle","sliderStyle","backgroundColor","shuffleTexture","color","shuffleDiv","bgSrc","imageIntervalID","newImage","Page","pageType","dimensions","document","querySelector","changePageType","intervalIdCollection","screenOrientation","getScreenOrientation","sidebarContent","getHomePage","getAboutMePage","getProjectsPage","window","innerWidth","innerHeight","img0","img1","img2","img3","img4","img5","mainStyle","sidebarStyle","borderRight","pStyle","aboutMeContent","headerRightContent","right","img6","aboutMeStyle","projectList","frameBorder","allow","SameSite","Secure","allowFullScreen","allyWardenImg","allyWarriorImg","playerArcaneMageImg","enemySkeletonImg","enemyCultistImg","siteImg","outline","newState","mobileCheck","a","check","navigator","userAgent","vendor","opera","test","substr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","e","alert","message"],"mappings":"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","file":"static/js/main.07d1cada.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\n/*This react componenet holds the different possible formats of a header and its relevant methods*/\r\nexport default class Header extends React.Component {\r\n    /*\r\n    Props:\r\n        Divs: A boolean array representing the divs that are to be filled in the header (in format [leftDiv, middleDiv, rightDiv])\r\n        Content: The content meant to fill the divs (in format [leftContent, midContent, rightContent], or simply left-to-right if not all divs are filled)\r\n    States:\r\n        None; This component only uses the props passed to it to determine its content, it does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the divs prop to indicate format and the content prop to indicate what should be displayed\r\n    Returns:\r\n        Content: renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        //Initialize the style variables for the three possible divs\r\n        var leftStyle = {};\r\n        var midStyle = {};\r\n        var rightStyle = {};\r\n        /*Header contains a left div*/\r\n        if(this.props.divs[0]) {\r\n            /*Header contains a left and middle div*/\r\n            if(this.props.divs[1]) {\r\n                /*Header contains a left, middle, and right div*/\r\n                if(this.props.divs[2]) {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'};\r\n                    midStyle = {left: '33%', width: '34%', height: '100%', position: 'absolute'};\r\n                    rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'};\r\n                    return (\r\n                        <div id = \"header\" style = {this.props.style}>\r\n                            <div id = \"headerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"headerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                            <div id = \"headerRight\" style = {rightStyle}>\r\n                                {this.props.content[2]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                /*Header contains only a left and middle div (left corner and single mid-right section)*/\r\n                else {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'}\r\n                    midStyle = {left: '33%', width: '67%', height: '100%', position: 'absolute'}\r\n                    return (\r\n                        <div id = \"header\" style = {this.props.style}>\r\n                            <div id = \"headerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"headerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            /*Header contains only a left and right div (header divided between the two divs)*/\r\n            else if(this.props.divs[2]) {\r\n                leftStyle = {left: '0%', width: '50%', height: '100%', position: 'absolute'};\r\n                rightStyle = {left: '50%', width: '50%', height: '100%', position: 'absolute'};\r\n                return (\r\n                    <div id = \"header\" style = {this.props.style}>\r\n                        <div id = \"headerLeft\" style = {leftStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"headerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            /*Else header contains only a left div (This is handled by the base case. One div will span the entire header regardless) */\r\n        }\r\n        /*Header contains a middle div. Header does not contain a left div*/\r\n        else if(this.props.divs[1]) {\r\n            /*Header contains only a middle and right div (right corner and single left-mid section)*/\r\n            if(this.props.divs[2]) {\r\n                midStyle = {left: '0%', width: '67%', height: '100%', position: 'absolute'};\r\n                rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'};\r\n                return (\r\n                    <div id = \"header\" style = {this.props.style}>\r\n                        <div id = \"headerMid\" style = {midStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"headerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            /*Else header contains only a middle div (This is handled by the base case) */\r\n        }\r\n\r\n        /*Else header contains only a right div (This is handled by the base case) */\r\n        /*Base Case: Either no extra divs or only one (Would span the entire header) NOTE: divs prop should pass [0,0,1] */\r\n        else {\r\n            midStyle = {left: '0%', width: '100%', height: '100%', position: 'absolute'};\r\n            return (\r\n                <div id = \"header\" style = {this.props.style}>\r\n                    <div id = \"headerMid\" style = {midStyle}>\r\n                        {this.props.content[0]}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './SidebarEntry.css';\r\n\r\n/*This react component holds the necessary styling for a SidebarEntry in the Sidebar component*/\r\nexport default class SidebarEntry extends React.Component {\r\n    /*\r\n    Props:\r\n        Content: The content to be displayed in the SidebarEntry objects (formatted as an array of list objects)\r\n    States:\r\n        None; This react component does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the content prop to indicate what should be displayed\r\n    Returns:\r\n        Content: renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        return (\r\n            <div id = \"sidebarEntry\">\r\n                <div id = \"sidebarBackground\" style = {this.props.bgStyle}></div>\r\n                {this.props.content}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SidebarEntry from './SidebarEntry';\r\nimport './Sidebar.css';\r\n\r\n/*The Sidebar react component displays the necessary styling and creates SidebarEntry objects to be displayed within it*/\r\nexport default class Sidebar extends React.Component {\r\n    /*\r\n    Props:\r\n        Content: An array of content to be displayed in each SidebarEntry in format {title, srcLink, description}\r\n    States:\r\n        None; This react component does not change dynamically, and uses the content prop passed to it to indicate content and \r\n        algrebraically decides formatting based on the length of the content prop\r\n    Values:\r\n        bgImages: An array of image objects containing a src url as well as height and width in order to size planets appropriately\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.bgImages = [{src: 'https://nineplanets.org/wp-content/uploads/2019/09/earth.png', height: 50, width: 50}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/mars.png', height: 30, width: 30}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/jupiter.png', height: 80, width: 80}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/saturn.png', height: 70, width: 70}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/uranus.png', height: 60, width: 60}];\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the content prop to indicate what to display and the length of the prop to indicate styling\r\n    Returns:\r\n        Content: renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        var listElements = [];\r\n        //Defines the height of each sidebar entry\r\n        var pcntPerElement = 100 / this.props.content.length;\r\n        //Gives a style to each element in such a way that each prop has an equal amount of space within the sidebar & the sidebar gets covered\r\n        for(var i = 0; i < this.props.content.length; i++) {\r\n            var currStyle = {top: `${(0 + (pcntPerElement * i))}%`, left: '0%', height: `${pcntPerElement}%`, width: '100%', position: 'absolute'};\r\n            //Creates a list element with a sidebarEntry with bgImage = (i + 3)rd planet and bgStyle = a random position within the sidebarEntry\r\n            listElements.push(<li key = {i} style = {currStyle}><SidebarEntry content = {this.props.content[i]} bgStyle = {{top: `${Math.floor(Math.random() * (100 - this.bgImages[i].height))}%`, left: `${Math.floor(Math.random() * (100 - this.bgImages[i].width))}%`, height: `${this.bgImages[i].height}%`, width: `${this.bgImages[i].width}%`, backgroundImage: `url(${this.bgImages[i].src})`, backgroundSize: 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', position: 'absolute'}}/></li>);\r\n        }\r\n        return (\r\n            <div id = \"sidebar\" style = {this.props.style}>\r\n                <ul>\r\n                    {listElements}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Footer.css'\r\n\r\n/*This react component holds the necessary format and styling options for the Footer*/\r\nexport default class Footer extends React.Component {\r\n    /*\r\n    Props:\r\n        Divs: A boolean array representing the divs that are to be filled in the footer (in format [leftDiv, middleDiv, rightDiv])\r\n        Content: The content meant to fill the divs (in format [leftContent, midContent, rightContent], or simply left-to-right if not all divs are filled)\r\n    States:\r\n        None; This component only uses the props passed to it to determine its content, it does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the divs prop to indicate format and the content prop to indicate what should be displayed\r\n    Returns:\r\n        Content; renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        var leftStyle = {};\r\n        var midStyle = {};\r\n        var rightStyle = {};\r\n        /*Footer contains a left div*/\r\n        if(this.props.divs[0]) {\r\n            /*Footer contains a left and middle div*/\r\n            if(this.props.divs[1]) {\r\n                /*Footer contains a left, middle, and right div*/\r\n                if(this.props.divs[2]) {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'};\r\n                    midStyle = {left: '33%', width: '34%', height: '100%', position: 'absolute'};\r\n                    rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'};\r\n                    return (\r\n                        <div id = \"footer\" style = {this.props.style}>\r\n                            <div id = \"footerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"footerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                            <div id = \"footerRight\" style = {rightStyle}>\r\n                                {this.props.content[2]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                /*Footer contains only a left and middle div (left corner and single mid-right section)*/\r\n                else {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'};\r\n                    midStyle = {left: '33%', width: '67%', height: '100%', position: 'absolute'};\r\n                    return (\r\n                        <div id = \"footer\" style = {this.props.style}>\r\n                            <div id = \"footerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"footerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            /*Footer contains only a left and right div (footer divided between the two divs)*/\r\n            else if(this.props.divs[2]) {\r\n                leftStyle = {left: '0%', width: '50%', height: '100%', position: 'absolute'};\r\n                rightStyle = {left: '50%', width: '50%', height: '100%', position: 'absolute'};\r\n                return (\r\n                    <div id = \"footer\" style = {this.props.style}>\r\n                        <div id = \"footerLeft\" style = {leftStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"footerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            /*Else footer contains only a left div (This is handled by the base case. One div will span the entire footer regardless) */\r\n\r\n        }\r\n        /*Footer contains a middle div. Footer does not contain a left div*/\r\n        else if(this.props.divs[1]) {\r\n            /*Footer contains only a middle and right div (right corner and single left-mid section)*/\r\n            if(this.props.divs[2]) {\r\n                midStyle = {left: '0%', width: '67%', height: '100%', position: 'absolute'};\r\n                rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'};\r\n                return (\r\n                    <div id = \"footer\" style = {this.props.style}>\r\n                        <div id = \"footerMid\" style = {midStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"footerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            /*Else footer contains only a middle div (This is handled by the base case) */\r\n        }\r\n\r\n        /*Else footer contains only a right div (This is handled by the base case) */\r\n    \r\n        /*Base Case: Either no extra divs or only one (Would span the entire footer) NOTE: divs prop should pass [0,0,1] */\r\n        else {\r\n            var footerElements = [];\r\n            var widthPerElement = 100 / this.props.content[0].length;\r\n            for(var i = 0; i < this.props.content[0].length; i++) {\r\n                footerElements.push(<li key = {i} style = {{left: `${0 + (widthPerElement * i)}%`, width: `${widthPerElement}%`}}>{this.props.content[0][i]}</li>)\r\n            }\r\n            return (\r\n                <div id = \"footer\" style = {this.props.style}>\r\n                    <ul>\r\n                        {footerElements}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './ProjectEntry.css';\r\n\r\n/*This react component contains all necessary formatting and styling for a projectEntry in the projects page*/\r\nexport default class ProjectEntry extends React.Component {\r\n    /*\r\n    Props:\r\n        Title: The title of the project\r\n        srcLink: A link to the source code of the project (usually a github repo)\r\n        Description: A brief description of the project\r\n        Image: An optional image to be added to the project entry\r\n        Demo: An optional demo to be added to the project entry\r\n    States:\r\n        demoMode: A boolean value denoting whether or not the ProjectEntry is in demo mode\r\n    Functions:\r\n        toggleDemoMode: This function will turn demoMode on/off by setting the demoMode state\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {demoMode: false};\r\n        this.toggleDemoMode = this.toggleDemoMode.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the title, description, image, and demo props to decide what the format and content should look like\r\n    Returns:\r\n        Content; renders the content to the DOM within the web browser (ProjectEntry will either return a description screen or demo screen as denoted by the demoMode state value)\r\n    */\r\n    render() {\r\n        //Rendering the description screen\r\n        if(!this.state.demoMode) {\r\n            //Checks if a demo was defined in the props, and creates a prompt to switch to demo mode (or doesn't) accordingly\r\n            var demoText = this.props.demo ? <h3 style = {{fontSize: `${this.props.mobile ? `${this.props.orientation === 'portrait' ? '3vw' : '1vw'}` : '1.5vw'}`}}>Click <a href = \"#projects\" rel = \"noreferrer\" onClick = {this.toggleDemoMode} title = {`View the demo for ${this.props.title}`}>here</a> to view a demo of the {this.props.title} project</h3> : null;\r\n            var descriptionStyle = {top: '20%', left: '0%', height: `${this.props.demo ? '70' : '80'}%`, width: '100%'};\r\n            var demoTextStyle = this.props.demo ? {bottom: '0%', left: '0%', height: '10%', width: '100%'} : {height: '0%', width: '0%'};\r\n            //Checks if images for the background of the project entry were defined, and creates their components (or doesn't) accordingly\r\n            var images = [];\r\n            if(this.props.imgLinks) {\r\n                var widthPerImage = 100 / this.props.imgLinks.length;\r\n                for(var i = 0; i < this.props.imgLinks.length; i++) {\r\n                    images.push(<div id = \"image\" key = {i} style = {{left: `${0 + (widthPerImage * i)}%`, width: `${widthPerImage}%`, backgroundImage: `url(${this.props.imgLinks[i]})`, backgroundSize: 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat'}}></div>)\r\n                }\r\n            }\r\n            return (\r\n                <div id = \"projectEntry\" style = {this.props.style}>\r\n                    <div id = \"images\">\r\n                        {images}\r\n                    </div>\r\n                    <div id = \"title\">\r\n                        <h1 title = {`View source code for ${this.props.title}`}><a style = {{fontSize: `${this.props.mobile ? `${this.props.orientation === 'portrait' ? '6vw' : '4vw'}` : '4vw'}`}} href = {this.props.srcLink} target = \"_blank\" rel = \"noreferrer\">{this.props.title}</a></h1>\r\n                    </div>\r\n                    <div id = \"description\" style = {descriptionStyle}>\r\n                        <h3 style = {{fontSize: `${this.props.mobile ? `${this.props.orientation === 'portrait' ? '3.5vw' : '1vw'}` : '2vw'}`}}>{this.props.description}</h3>\r\n                    </div>\r\n                    <div id = \"demoText\" style = {demoTextStyle}>\r\n                        {demoText}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        //Rendering the demo screen\r\n        else {\r\n            return (\r\n                <div id = \"projectEntry\" style = {this.props.style}>\r\n                    <div id = \"demoEntry\">\r\n                        <div id = \"demo\">\r\n                            {this.props.demo}\r\n                        </div>\r\n                        <div id = \"returnText\">\r\n                            <h3 style = {{fontSize: `${this.props.mobile ? `${this.props.orientation === 'portrait' ? '3vw' : '1vw'}` : '1.5vw'}`}}>Click <a href = \"#projects\" rel = \"noreferrer\" onClick = {this.toggleDemoMode} title = {`Return to the description for ${this.props.title}`}>here</a> to return to the description of {this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function toggles the demo mode on/off for the ProjectEntry that calls it\r\n    Parameters:\r\n        None; uses demoMode state variable as parameter\r\n    Returns:\r\n        None; updates the demoMode state variable\r\n    */\r\n    toggleDemoMode() {\r\n        this.state.demoMode ? this.setState({demoMode: false}) : this.setState({demoMode: true});\r\n    }\r\n}","import React from 'react';\r\nimport ProjectEntry from './ProjectEntry.jsx';\r\nimport './ProjectMain.css';\r\n\r\n\r\n/*This react component holds the necessary styling and props for the main section of the projects page*/\r\nexport default class ProjectMain extends React.Component {\r\n    /*\r\n    Props:\r\n        List Entries: An array of list entries for the ProjectMain component to use to fill in ProjectEntry objects within the ProjectMain component\r\n        Mobile: A boolean value denoting whether or not the device is a mobile device to be passed to ProjectEntries\r\n        Orientation: A string value ('portrait' or 'landscape') denoting the orientation of the device to be passed to ProjectEntries\r\n    States:\r\n        None; This component uses the listEntries prop to determine format and content and does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the listEntries prop to indicate format and what should be displayed\r\n    Returns:\r\n        Content; renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        var listEntries = [];\r\n        //Populates listEntries with corresponding list elements with partitioned styles for each entry (Height is 50% per entry)\r\n        for(var i = 0; i < this.props.listEntries.length; i++) {\r\n            var currStyle = {top: `${0 + (50 * i)}%`, left: '0%', height: '50%', width: '100%', position: 'absolute'};\r\n            listEntries.push(<li key = {i}><ProjectEntry title = {this.props.listEntries[i].title} srcLink = {this.props.listEntries[i].srcLink} demo = {this.props.listEntries[i].demo} imgLinks = {this.props.listEntries[i].imgLinks} description = {this.props.listEntries[i].description} style = {currStyle} mobile = {this.props.mobile} orientation = {this.props.orientation} /></li>)\r\n        }\r\n        return (\r\n            <div id = \"projectMain\">\r\n                <a target = \"_blank\" href = \"https://github.com/milesmaloney\" rel = \"noreferrer\">\r\n                    <div id = \"ghicon\" title = \"Redirect to Github\"></div>\r\n                </a>\r\n                <ul>\r\n                    {listEntries}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './LocalClock.css';\r\n\r\n\r\n/*The LocalClock React component creates a clock that will switch between local time and date*/\r\nexport default class LocalClock extends React.Component {\r\n    /*\r\n    Props:\r\n        fontSize: defines the font size of the clock\r\n    States:\r\n        date: The current date/time\r\n        timeOrDate: Boolean value denoting whether the clock is showing time or date\r\n    Functions:\r\n        changeState: Changes the timeOrDate state\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date(), timeOrDate : 'time'};\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the timeOrDate and date states to decide what to display and in what format\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        //Populates the digitStyles with positioning for each digit in relation to the others\r\n        var digitStyles = [];\r\n        for(var i = 0; i < 10; i++) {\r\n            digitStyles.push({bottom: '0%', left: `${0 + i * 7.5}%`, height: '100%', width: '7.5%', position: 'absolute', fontSize: `${this.props.fontSize}`});\r\n        }\r\n        //Rounds out any single-digit values and adds leading 0's for consistency\r\n        var digitPairs = (this.state.timeOrDate === 'time' ? this.state.date.toLocaleTimeString().replace(\" \",\"\").split(\":\") : this.state.date.toLocaleDateString().split(\"/\"))\r\n        for(var j = 0; j < digitPairs.length; j++) {\r\n            if(digitPairs[j].length % 2 === 1) {\r\n                digitPairs[j] = '0' + digitPairs[j];\r\n            }\r\n        }\r\n        //Gets the string in array format as opposed to divided digit pairs\r\n        var shownDigits = digitPairs.join(\"\").split(\"\");\r\n        return (\r\n            <div id = \"clock\" onClick = {this.changeState} title = {`Change clock to ${this.state.timeOrDate === 'time' ? 'date' : 'time'}`}>\r\n                <div id = \"digits\">\r\n                    <div id = \"digitOne\" style = {digitStyles[0]}>\r\n                        <h4>{shownDigits[0]}</h4>\r\n                    </div>\r\n                    <div id = \"digitTwo\" style = {digitStyles[1]}>\r\n                        <h4>{shownDigits[1]}</h4>\r\n                    </div>\r\n                    <div id = \"digitThree\" style = {digitStyles[2]}>\r\n                        <h4>{this.state.timeOrDate === 'time' ? ':' : '/'}</h4>\r\n                    </div>\r\n                    <div id = \"digitFour\" style = {digitStyles[3]}>\r\n                        <h4>{shownDigits[2]}</h4>\r\n                    </div>\r\n                    <div id = \"digitFive\" style = {digitStyles[4]}>\r\n                        <h4>{shownDigits[3]}</h4>\r\n                    </div>\r\n                    <div id = \"digitSix\" style = {digitStyles[5]}>\r\n                        <h4>{this.state.timeOrDate === 'time' ? ':' : '/'}</h4>\r\n                    </div>\r\n                    <div id = \"digitSeven\" style = {digitStyles[6]}>\r\n                        <h4>{shownDigits[4]}</h4>\r\n                    </div>\r\n                    <div id = \"digitEight\" style = {digitStyles[7]}>\r\n                        <h4>{shownDigits[5]}</h4>\r\n                    </div>\r\n                    <div id = \"digitNine\" style = {digitStyles[8]}>\r\n                        <h4>{shownDigits[6]}</h4>\r\n                    </div>\r\n                    <div id = \"digitTen\" style = {digitStyles[9]}>\r\n                        <h4>{shownDigits[7]}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n    This function handles everything that needs to happen once the component is rendered\r\n    Parameters:\r\n        None; Starts a timer interval to update the clock and calls changeState to begin the interval loop\r\n    Returns:\r\n        None; Begins intervals for changing between time and date and updating the datetime variable\r\n    */\r\n    componentDidMount() {\r\n        //updates time every second\r\n        this.timeIntervalID = setInterval(() => {\r\n            this.setState({ date: new Date()})\r\n        }, 1000);\r\n\r\n        //switches between time and date every specified interval (5 seconds of date : 10 seconds of time)\r\n        this.changeState();\r\n    }\r\n\r\n    /*\r\n    This function handles what should be done when the component is unrendered\r\n    Parameters:\r\n        None; uses all interval ID's to clear any pending intervals to free up processing power\r\n    Returns:\r\n        None; stops any pending intervals\r\n    */\r\n    componentWillUnmount() {\r\n        clearInterval(this.timeIntervalID);\r\n        clearInterval(this.transitionIntervalID);\r\n        clearTimeout(this.clockIntervalID);\r\n    }\r\n\r\n    /*\r\n    Parameters:\r\n        None; Only called to transition states\r\n    Returns:\r\n        None; changes the state to the complementary state and starts the corresponding timer\r\n    */\r\n    changeState() {\r\n        clearTimeout(this.clockIntervalID);\r\n        if(this.state.timeOrDate === 'time') {\r\n            this.setState({ timeOrDate: 'date' });\r\n            this.clockIntervalID = setTimeout(this.changeState, 5000);\r\n        }\r\n        else {\r\n            this.setState({ timeOrDate: 'time' });\r\n            this.clockIntervalID = setTimeout(this.changeState, 10000);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport './ImageScroller.css';\r\n\r\n\r\n\r\nexport default class ImageScroller extends React.Component {\r\n    /*\r\n    Props:\r\n        Shuffle: Decides whether or not the ImageScroller starts in shuffle mode\r\n    States:\r\n        Shuffle: Maintains whether or not the ImageScroller is scrolling through images sequentially or randomly\r\n        currentPicture: Maintains which picture is currently being displayed\r\n    Functions:\r\n        changeImage: changes the current image being displayed\r\n        toggleShuffle: Turns the shuffle value on/off\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentPicture: 0, shuffle: this.props.shuffle};\r\n        this.changeImage = this.changeImage.bind(this);\r\n        this.toggleShuffle = this.toggleShuffle.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the currentPicture and shuffle states to decide the style the ImageScroller should take and the image to be displayed\r\n    Returns:\r\n        Content; renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        //Define the style variables for the style, slider, and shuffle button based on the shuffle state variable\r\n        var scrollerStyle = {backgroundImage: `url(${this.props.images[this.state.currentPicture]})`, backgroundSize: `${this.props.mobile ? 'contain' : 'cover'}`};\r\n        var sliderStyle = {backgroundColor: `${this.state.shuffle ? 'rgba(0,0,0,0.5)' : 'rgba(256,256,256,0.5)'}`, left: `${this.state.shuffle ? '80' : '0'}%`};\r\n        var shuffleTexture = this.state.shuffle ? {backgroundColor: 'rgba(256,256,256,0.5)', color: 'rgba(0,0,0,0.5)'} : {backgroundColor: 'rgba(0,0,0,0.5)', color: 'rgba(256, 256, 256, 0.5)'};\r\n        var shuffleDiv = this.state.shuffle ? <div id = \"shuffleTexture\" style = {shuffleTexture} title = \"Turn off shuffle\"><h2>ON</h2></div> : <div id = \"shuffleTexture\" style = {shuffleTexture} title = \"Turn on shuffle\"><h1>OFF</h1></div>;\r\n        return (\r\n            <div id = 'imageScrollerBackground' style = {{backgroundImage: `url(${this.props.bgSrc})`}}>\r\n                <div id = 'loadingBg'>\r\n                    <h1 style = {{fontSize: `${this.props.mobile ? '5vw' : '10vw'}`}}>Loading...</h1>\r\n                </div>\r\n                <div id = 'ImageScroller' style = {scrollerStyle} onClick = {this.changeImage} title = {\"Continue to next image\"}>\r\n                    <div id = 'shuffleButton' onClick = {this.toggleShuffle}>\r\n                        <div id = 'shuffleSlider' style = {sliderStyle}></div>\r\n                        {shuffleDiv}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    /*\r\n    This function describes what the component should do once it is rendered\r\n    Parameters:\r\n        None; sets an interval for changing images\r\n    Returns:\r\n        None; updates imageIntervalID for interval clearing upon unrendering the element\r\n    */\r\n    componentDidMount() {\r\n        //Creates a interval to change the image every 3 seconds\r\n        this.imageIntervalID = setInterval(this.changeImage, 3000);\r\n    }\r\n\r\n    /*\r\n    This function describes what the component should do once it is unrendered\r\n    Parameters:\r\n        None; uses imageIntervalID to clear the interval\r\n    Returns:\r\n        None; clears any pending intervals to clear up processing power\r\n    */\r\n    componentWillUnmount() {\r\n        clearInterval(this.imageIntervalID);\r\n    }\r\n\r\n    /*\r\n    This function will change the image and reset the image change interval (handles onClick events)\r\n    Parameters:\r\n        None: Uses the shuffle and currentPicture states to decide whether or not the next image is chosen sequentially or random and what \r\n        the next image will be\r\n    Returns:\r\n        None: Changes the currentPicture state to reflect the new image we want to display\r\n    */\r\n    changeImage() {\r\n        //Gets the next image (random b/w 0 and # of images if in shuffle) or restarts the scroller\r\n        var newImage = this.state.shuffle ? Math.floor(Math.random() * this.props.images.length) : (this.state.currentPicture  === this.props.images.length - 1 ? 0 : this.state.currentPicture + 1);\r\n        this.setState({ currentPicture: newImage});\r\n        //Resets the image change interval (necessary for onClick call)\r\n        clearInterval(this.imageIntervalID);\r\n        this.imageIntervalID = setInterval(this.changeImage, 3000);\r\n    }\r\n\r\n    /*\r\n    This function toggles the shuffle function of the ImageScroller on/off\r\n    Parameters:\r\n        None; uses the shuffle state to determine which shuffle state to change to\r\n    Returns:\r\n        None; changes shuffle state based on the current shuffle state\r\n    */\r\n    toggleShuffle() {\r\n        this.state.shuffle ? this.setState({shuffle: 0}) : this.setState({shuffle: 1});\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/img0.0535866c.jpg\";","export default __webpack_public_path__ + \"static/media/img1.16ace0ce.jpg\";","export default __webpack_public_path__ + \"static/media/img2.ee2d3c91.jpg\";","export default __webpack_public_path__ + \"static/media/img3.141d8096.jpg\";","export default __webpack_public_path__ + \"static/media/img4.2ea9a74a.jpg\";","export default __webpack_public_path__ + \"static/media/img5.4c15162a.jpg\";","export default __webpack_public_path__ + \"static/media/img6.83556862.jpg\";","export default __webpack_public_path__ + \"static/media/siteImg.d83318e1.png\";","export default __webpack_public_path__ + \"static/media/warden.c1e293ed.png\";","export default __webpack_public_path__ + \"static/media/warrior.384055ef.png\";","export default __webpack_public_path__ + \"static/media/skeleton.dc3f322c.png\";","export default __webpack_public_path__ + \"static/media/cultist.bd9b6018.png\";","export default __webpack_public_path__ + \"static/media/pArcaneMage.1f79caca.png\";","import React from 'react';\r\n//Layout imports\r\nimport './Page.css';\r\nimport Header from './Header.jsx';\r\nimport Sidebar from './Sidebar.jsx';\r\nimport Footer from './Footer.jsx';\r\nimport ProjectMain from './ProjectMain.jsx';\r\n//Component Imports\r\nimport LocalClock from './LocalClock.jsx';\r\nimport ImageScroller from './ImageScroller.jsx';\r\n//Asset Imports\r\nimport img0 from './Assets/images/img0.jpg';\r\nimport img1 from './Assets/images/img1.jpg';\r\nimport img2 from './Assets/images/img2.jpg';\r\nimport img3 from './Assets/images/img3.jpg';\r\nimport img4 from './Assets/images/img4.jpg';\r\nimport img5 from './Assets/images/img5.jpg';\r\nimport img6 from './Assets/images/img6.jpg';\r\nimport siteImg from './Assets/images/siteImg.png';\r\nimport allyWardenImg from './Assets/gameAssets/warden.png';\r\nimport allyWarriorImg from './Assets/gameAssets/warrior.png';\r\nimport enemySkeletonImg from './Assets/gameAssets/skeleton.png';\r\nimport enemyCultistImg from './Assets/gameAssets/cultist.png';\r\nimport playerArcaneMageImg from './Assets/gameAssets/pArcaneMage.png';\r\n\r\n/*This react component displays a page based on the prop pageType, which specifies which page of the website is to be displayed*/\r\nexport default class Page extends React.Component {\r\n    /*\r\n    Props:\r\n        pageType: The type of page to be displayed (e.g. 'home')\r\n    States:\r\n        pageType: Maintains the pageType and manages page changes\r\n        dimensions: Maintains the dimensions of the screen to handle resize events ('resize' event listener wasn't firing properly)\r\n    Values:\r\n        intervalIdCollection: The collection of interval ID's to be cleared upon unmounting from the DOM\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pageType: this.props.pageType, dimensions: `${document.querySelector('#width')}x${document.querySelector('#height')}`};\r\n        this.changePageType = this.changePageType.bind(this);\r\n        this.intervalIdCollection = [];\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the pageType prop to indicate which page should be displayed\r\n    Returns:\r\n        Content: renders the content to the DOM within the web browser\r\n    */\r\n    render() {\r\n        //Gets the orientation of the screen to be passed to the page functions\r\n        var screenOrientation = this.getScreenOrientation();\r\n        //Initializes the Sidebar content; any additions/changes to the Sidebar should happen here\r\n        var sidebarContent = [\r\n            <a style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} href = \"#home\" onClick = {() => this.changePageType('home')}><h3 style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} title = \"Return to home page\">Home</h3></a>,\r\n            <a style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} href = \"https://www.linkedin.com/in/miles-maloney-0783051b9/\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's LinkedIn profile\">LinkedIn</a>,\r\n            <a style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} href = \"https://github.com/milesmaloney\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's Github profile\">Github</a>,\r\n            <a style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} href = \"#projects\" onClick = {() => this.changePageType('projects')}><h3 style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} title = \"Learn about Miles's projects\">Projects</h3></a>,\r\n            <a style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} href = \"#aboutme\" onClick = {() => this.changePageType('about me')}><h3 style = {{fontSize: `${this.props.mobile & screenOrientation === 'portrait' ? '4vw' : '3vw'}`}} title = \"Learn about Miles's background\">About Me</h3></a>\r\n        ];\r\n        //Renders the content for the home page\r\n        if(this.state.pageType === 'home') {\r\n            return this.props.mobile ? this.getHomePage(sidebarContent, screenOrientation, true) : this.getHomePage(sidebarContent, screenOrientation);\r\n        }\r\n        //Renders the content for the about me page\r\n        else if(this.state.pageType === 'about me') {\r\n            return this.props.mobile ? this.getAboutMePage(sidebarContent, screenOrientation, true) : this.getAboutMePage(sidebarContent, screenOrientation);\r\n        }\r\n        //Renders the content for the projects page\r\n        else if(this.state.pageType === 'projects') {\r\n            return this.props.mobile ? this.getProjectsPage(sidebarContent, screenOrientation, true) : this.getProjectsPage(sidebarContent, screenOrientation);\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function defines actions that should be taken once the component is mounted on the DOM\r\n    Parameters:\r\n        None; detects change in dimensions every 1/2 second and updates the state accordingly\r\n    Returns:\r\n        None; sets an interval to check for dimension changes\r\n    */\r\n    componentDidMount() {\r\n        this.intervalIdCollection.push(setInterval(() => {\r\n            if(this.state.dimensions !== `${window.innerWidth}x${window.innerHeight}`) {\r\n                this.setState({dimensions: `${window.innerWidth}x${window.innerHeight}`});\r\n            }\r\n        }, 500));\r\n    }\r\n\r\n    /*\r\n    This function defines actions that should be taken when the component is unmounting from the DOM\r\n    Parameters:\r\n        None; clears the intervals defined in this.intervalIDCollection\r\n    Returns:\r\n        None; clears all pending intervals\r\n    */\r\n    componentWillUnmount() {\r\n        for(var i = 0; i < this.intervalIdCollection.length; i++) {\r\n            clearInterval(this.intervalIdCollection[i]);\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function gets the homepage elements based on the screen orientation and device\r\n    Parameters:\r\n        sidebarContent: The content to be used to navigate through the site\r\n        screenOrientation: A string denoting the current orientation of the screen at the time of the render() call\r\n        mobile (default: false): A boolean value denoting whether or not the user is on a mobile device\r\n    Returns:\r\n        Content: Returns the content of the home page\r\n    */\r\n    getHomePage(sidebarContent, screenOrientation, mobile = false) {\r\n        //Initializes the array of image links for the image scroller to iterate through\r\n        var images = [img0,img1,img2,img3,img4,img5];\r\n        var mainStyle = {};\r\n        //Mobile site contains a footer instead of a sidebar\r\n        if(this.props.mobile) {\r\n            mainStyle = {left: '0%', top: '10%', width: '100%', height: '80%'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,0]} content = {[<LocalClock fontSize = '3vw'/>, <h1 style = {{fontSize: `${mobile & screenOrientation === 'portrait' ? '9.5vw' : '5vw'}`}} onClick = {() => this.changePageType('about me')}>Miles Maloney</h1>]}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ImageScroller shuffle = {0} images = {images} bgSrc = {'https://images.pexels.com/photos/956981/milky-way-starry-sky-night-sky-star-956981.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'} mobile = {true} orientation = {screenOrientation}/>\r\n                    </div>\r\n                    <Footer divs = {[0,0,1]} content = {[sidebarContent]}/>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            mainStyle = {left: '20%', top: '10%', width: '80%', height: '90%'};\r\n            var sidebarStyle = {left: '0%', top: '10%', width: '20%', height: '90%', borderRight: '5px groove rgba(0,0,0,1)'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,0]} content = {[<LocalClock fontSize = '3vw'/>, <h1 style = {{fontSize: '6vw'}} onClick = {() => this.changePageType('about me')}>Miles Maloney</h1>]}/>\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ImageScroller shuffle = {0} images = {images} bgSrc = {'https://images.pexels.com/photos/956981/milky-way-starry-sky-night-sky-star-956981.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function gets the homepage elements based on the screen orientation and device\r\n    Parameters:\r\n        sidebarContent: The content to be used to navigate through the site\r\n        screenOrientation: A string denoting the current orientation of the screen at the time of the render() call\r\n        mobile (default: false): A boolean value denoting whether or not the user is on a mobile device\r\n    Returns:\r\n        Content: Returns the content of the about me page\r\n    */\r\n    getAboutMePage(sidebarContent, screenOrientation, mobile = false) {\r\n        var mainStyle = {};\r\n        //Changes the paragraph style for mobile or retains font-size for computer\r\n        var pStyle = this.props.mobile ? {fontSize: `${screenOrientation === 'portrait' ? '3.5vw' : '1vw'}`} : {};\r\n        //Initializes the content for the about me section; any additions/changes to the About Me page should happen here\r\n        var aboutMeContent = [\r\n            <p style = {pStyle} key = \"aboutMeContent\">{'\\t'}Hello! My name is Miles Maloney, and I am a recent graduate (May 2021) of the B.S. Computer Science program at University of San Diego with a major in Computer Science and a minor in Theatre Arts. This website is a hub for you to find everything you might want to learn about my background as a software engineer. You can click the embedded links or the links in the sidebar to view my {<a href = \"https://www.linkedin.com/in/miles-maloney-0783051b9/\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's LinkedIn profile\">LinkedIn</a>} and {<a href = \"https://github.com/milesmaloney\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's Github profile\">Github</a>} profiles as well as visit the {<a href = \"#projects\" onClick = {() => this.changePageType('projects')} title = \"Learn about Miles's projects\">projects</a>} page to check out some of the projects I have worked on. I hope you have a nice day!</p>\r\n        ];\r\n        //Initializes images to be displayed in the top-right corner of the page\r\n        var headerRightContent = [\r\n            <div id = \"images\">\r\n                <div style = {{right: '0%', width: `${mobile & screenOrientation === 'portrait'  ? '50%' : '35%'}`, backgroundImage: `url(${img6})`, backgroundSize: 'cover'}}></div>\r\n                <div style = {{right: `${mobile & screenOrientation === 'portrait'  ? '50%' : '35%'}`, width: `${mobile ? '35%' : '25%'}`, backgroundImage: 'url(https://www.sandiego.edu/assets/global/images/logos/usd-logo-stacked-inverse.png)', backgroundSize: 'contain'}}></div>\r\n            </div>\r\n        ];\r\n        //Mobile site contains a footer instead of a sidebar\r\n        if(this.props.mobile) {\r\n            mainStyle = {left: '0%', top: '10%', height: '80%', width: '100%'};\r\n            var aboutMeStyle = {height: '50%', width: '90%'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,1]} content = {[<LocalClock fontSize = '3vw'/>, <h1 style = {{fontSize: `${mobile & screenOrientation === 'portrait' ? '8vw' : '5vw'}`}} onClick = {() => this.changePageType('about me')}>Miles Maloney</h1>, headerRightContent[0]]}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <div id = \"aboutMe\" style = {aboutMeStyle}>\r\n                            {aboutMeContent}\r\n                        </div>\r\n                    </div>\r\n                    <Footer divs = {[0,0,1]} content = {[sidebarContent]}/>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            mainStyle = {left: '20%', top: '10%', height: '90%', width: '80%'};\r\n            var sidebarStyle = {left: '0%', top: '10%', width: '20%', height: '90%'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,1]} content = {[<LocalClock fontSize = '3vw'/>, <h1 style = {{fontSize: '5.5vw'}} onClick = {() => this.changePageType('about me')}>Miles Maloney</h1>, headerRightContent[0]]}/>\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <div id = \"aboutMe\">\r\n                            {aboutMeContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function gets the homepage elements based on the screen orientation and device\r\n    Parameters:\r\n        sidebarContent: The content to be used to navigate through the site\r\n        screenOrientation: A string denoting the current orientation of the screen at the time of the render() call\r\n        mobile (default: false): A boolean value denoting whether or not the user is on a mobile device\r\n    Returns:\r\n        Content: Returns the content of the projects page\r\n    */\r\n    getProjectsPage(sidebarContent, screenOrientation, mobile = false) {\r\n        var mainStyle = {};\r\n        //Initializes the project list entries; any additions/changes to ProjectMain should happen here\r\n        var projectList = [\r\n            {title: 'Cubic Voice AI', srcLink: 'https://github.com/milesmaloney/virtual-ticket-agent', demo: <iframe width=\"100%\" height=\"98%\" src=\"https://www.youtube.com/embed/_1iAEM2Z0rE\" title=\"Cubic Voice AI Demo\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" SameSite=\"none\" Secure allowFullScreen></iframe>, imgLinks: ['https://mycroft.ai/wp-content/uploads/2018/01/Mycroft-Logo-Square-Web-thumb.png', 'https://www.sandiego.edu/assets/global/images/logos/usd-logo-stacked-inverse.png', 'https://www.servicenow.com/content/dam/servicenow/images/customers-asset/details/logo/logo-cubic-transportation.png.imgw.720.720.jpg'], description: '\\tIn this industry-sponsored project, three fellow students from University of San Diego and I created a conversational ticket agent using natural language processing engine Mycroft AI. This virtual ticket agent was built in Python on Raspberry Pi hardware, and used SQLite3 for database purposes. It has the functionalities of creating an account, buying a pass, routing you to your destination via transit, and checking your account balance.'},\r\n            {title: 'Turn-based Game', srcLink: 'https://github.com/milesmaloney/Game-Builder', demo: <h1 style = {{fontSize: `${mobile ? `${screenOrientation === 'portrait' ? '5vw' : '1.5vw'}` : '2vw'}`}}>{'\\t'}The demo for this project is currently unavailable due to an in-progress conversion from a command line interface to a React.js interface. In the meantime, you can run this project through the command line by following the instructions in the <a href = 'https://github.com/milesmaloney/Game-Builder' target = \"_blank\" rel = \"noreferrer\">source code repository</a>'s README file.</h1> , imgLinks: [allyWardenImg, allyWarriorImg, playerArcaneMageImg, enemySkeletonImg, enemyCultistImg], description: '\\tIn this javascript project, I decided to create a game in order to further develop my programming skills and learn more about javascript. This turn-based game allows a user to select a name and class and battle alongside AI allies against AI enemies. I plan to include a demo when I am finished making the game compatible with React. In the meantime, you may view the source code by clicking the title and run the game from the command line if you\\'d like.'},\r\n            {title: 'React Portfolio Website', srcLink: 'https://github.com/milesmaloney/React-Website', demo: <h1 style = {{fontSize: `${mobile ? `${screenOrientation === 'portrait' ? '5vw' : '1.5vw'}` : '2vw'}`}}>{'\\t'}You are currently browsing the React Portfolio Website project. To view its functionalities in more detail, you can explore the website and see what happens when you click or hover on each and every part of the site.</h1>, imgLinks: ['https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png', siteImg] , description: '\\tI created this React website in response to the surprising amount of demand for web developers in the current job market. I found that this project was very helpful in understanding front-end technologies and the challenges that come with them, as well as the surprising convenience of many features of React. You are currently viewing this exact website, which was built from scratch using React.js.'},\r\n        ];\r\n        //Mobile page contains a footer instead of header, and passes the mobile and orientation props to ProjectMain for further styling changes\r\n        if(this.props.mobile) {\r\n            mainStyle = {left: '0%', top: '10%', width: '100%', height: '80%', backgroundImage: 'url(https://prod-discovery.edx-cdn.org/media/programs/card_images/e0de6882-c5d1-43f3-99e0-17e386489dca-9c3bda2df48f.jpg)', backgroundSize: 'cover', backgroundPosition: 'left'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[0,0,1]} content = {[<h1 style = {{fontSize: mobile ? `${screenOrientation === 'portrait' ? '13vw' : '6vw'}` : '8vw'}}>Projects</h1>]}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ProjectMain listEntries = {projectList} mobile = {true} orientation = {screenOrientation}/>\r\n                    </div>\r\n                    <Footer divs = {[0,0,1]} content = {[sidebarContent]}/>\r\n                </div>\r\n            )            \r\n        }\r\n        else {\r\n            mainStyle = {left: '20%', top: '0%', width: '80%', height: '100%', backgroundImage: 'url(https://prod-discovery.edx-cdn.org/media/programs/card_images/e0de6882-c5d1-43f3-99e0-17e386489dca-9c3bda2df48f.jpg)', backgroundSize: 'cover', backgroundPosition: 'left'};\r\n            var sidebarStyle = {left: '0%', top: '0%', width: '20%', height: '100%', outline: '2px groove rgba(128, 0, 256, 0.75)'};\r\n            return (\r\n                <div id = \"page\">\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ProjectMain listEntries = {projectList}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*\r\n    changePageType() handles transitions between pages (e.g. moving from home page to about me page)\r\n    Parameters:\r\n        newState: The state to be transitioned to\r\n    Returns:\r\n        None; changes the state.pageType value to the pageType specified by newState\r\n    */\r\n    changePageType(newState) {\r\n        switch(newState) {\r\n            case 'home':\r\n                this.setState({pageType: 'home'});\r\n                break;\r\n            case 'about me':\r\n                this.setState({pageType: 'about me'});\r\n                break;\r\n            case 'projects':\r\n                this.setState({pageType: 'projects'});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function gets the current screen orientation\r\n    Parameters:\r\n        None; uses the window object's properties innerWidth and innerHeight\r\n    Returns:\r\n        String: 'portrait' if the height exceeds the width or 'landscape' if the width exceeds the height\r\n    */\r\n    getScreenOrientation() {\r\n        return window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\r\n    }\r\n}","import './App.css';\r\nimport Page from './Page.jsx';\r\n\r\n/*This function serves as a container to render our app in*/\r\nfunction App() {\r\n  //Returns the home page (navigates to other pages [not links] through a state change)\r\n  return window.mobileCheck() ? (\r\n    <div id = \"App\">\r\n      <Page pageType = 'home' mobile = {true}/>\r\n    </div>\r\n  ) : (\r\n    <div id = \"App\">\r\n      <Page pageType = 'home' mobile = {false}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Function imported from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n/*\r\nThis function detects whether the app is open in a mobile device\r\nParameters:\r\n  None; compares a regex of all possible mobile devices to the device defined to the browser (user agent/vendor)\r\nReturns:\r\n  Check; a boolean value denoting whether or not the user is using a mobile device\r\n*/\r\nwindow.mobileCheck = function() {\r\n  let check = false;\r\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n  return check;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//Attempts to render the app, and alerts the user if something goes wrong\r\ntry {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\ncatch(e) {\r\n  alert(e.message);\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}