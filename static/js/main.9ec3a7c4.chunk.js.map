{"version":3,"sources":["Header.jsx","SidebarEntry.jsx","Sidebar.jsx","ProjectEntry.jsx","ProjectMain.jsx","LocalClock.jsx","ImageScroller.jsx","Assets/images/img0.jpg","Assets/images/img1.jpg","Assets/images/img2.jpg","Assets/images/img3.jpg","Assets/images/img4.jpg","Assets/images/img5.jpg","Assets/images/img6.jpg","Assets/images/siteImg.png","Assets/gameAssets/warden.png","Assets/gameAssets/warrior.png","Assets/gameAssets/skeleton.png","Assets/gameAssets/cultist.png","Assets/gameAssets/pArcaneMage.png","Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","leftStyle","midStyle","rightStyle","this","divs","left","width","height","position","id","style","content","React","Component","SidebarEntry","bgStyle","Sidebar","bgImages","src","listElements","pcntPerElement","length","i","currStyle","top","toString","push","Math","floor","random","String","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","ProjectEntry","demoMode","toggleDemoMode","bind","demo","href","rel","onClick","title","demoText","descriptionStyle","demoTextStyle","bottom","images","imgLinks","widthPerImage","srcLink","target","description","setState","ProjectMain","listEntries","LocalClock","date","Date","timeOrDate","changeState","digitStyles","digitPairs","toLocaleTimeString","replace","split","toLocaleDateString","j","shownDigits","join","timeIntervalID","setInterval","clearInterval","transitionIntervalID","clearTimeout","clockIntervalID","setTimeout","ImageScroller","currentPicture","shuffle","changeImage","toggleShuffle","shuffleDiv","shuffleTexture","scrollerStyle","shuffleStyle","sliderStyle","backgroundColor","zIndex","color","bgSrc","imageIntervalID","newImage","Page","pageType","mainStyle","sidebarStyle","headerStyle","sidebarContent","borderRight","img0","img1","img2","img3","img4","img5","aboutMeContent","headerRightContent","right","img6","outline","projectList","frameborder","allow","allowfullscreen","allyWardenImg","allyWarriorImg","playerArcaneMageImg","enemySkeletonImg","enemyCultistImg","siteImg","newState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ec3a7c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\n/*This react componenet holds the different possible formats of a header and its relevant methods*/\r\nexport default class Header extends React.Component {\r\n    /*\r\n    Props:\r\n        Divs: A boolean array representing the divs that are to be filled in the header (in format [leftDiv, middleDiv, rightDiv])\r\n        Content: The content meant to fill the divs (in format [leftContent, midContent, rightContent], or simply left-to-right if not all divs are filled)\r\n    States:\r\n        None; This component only uses the props passed to it to determine its content, it does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the divs prop to indicate format and the content prop to indicate what should be displayed\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        var leftStyle = {};\r\n        var midStyle = {};\r\n        var rightStyle = {};\r\n        /*Header contains a left div*/\r\n        if(this.props.divs[0]) {\r\n            /*Header contains a left and middle div*/\r\n            if(this.props.divs[1]) {\r\n                /*Header contains a left, middle, and right div*/\r\n                if(this.props.divs[2]) {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'};\r\n                    midStyle = {left: '33%', width: '34%', height: '100%', position: 'absolute'};\r\n                    rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'};\r\n                    return (\r\n                        <div id = \"header\" style = {this.props.style}>\r\n                            <div id = \"headerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"headerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                            <div id = \"headerRight\" style = {rightStyle}>\r\n                                {this.props.content[2]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                /*Header contains only a left and middle div (left corner and single mid-right section)*/\r\n                else {\r\n                    leftStyle = {left: '0%', width: '33%', height: '100%', position: 'absolute'}\r\n                    midStyle = {left: '33%', width: '67%', height: '100%', position: 'absolute'}\r\n                    return (\r\n                        <div id = \"header\" style = {this.props.style}>\r\n                            <div id = \"headerLeft\" style = {leftStyle}>\r\n                                {this.props.content[0]}\r\n                            </div>\r\n                            <div id = \"headerMid\" style = {midStyle}>\r\n                                {this.props.content[1]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            /*Header contains only a left and right div (header divided between the two divs)*/\r\n            else if(this.props.divs[2]) {\r\n                leftStyle = {left: '0%', width: '50%', height: '100%', position: 'absolute'};\r\n                rightStyle = {left: '50%', width: '50%', height: '100%', position: 'absolute'};\r\n                return (\r\n                    <div id = \"header\" style = {this.props.style}>\r\n                        <div id = \"headerLeft\" style = {leftStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"headerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            /*Else header contains only a left div (This is handled by the base case. One div will span the entire header regardless) */\r\n        }\r\n        /*Header contains a middle div. Header does not contain a left div*/\r\n        else if(this.props.divs[1]) {\r\n            /*Header contains only a middle and right div (right corner and single left-mid section)*/\r\n            if(this.props.divs[2]) {\r\n                midStyle = {left: '0%', width: '67%', height: '100%', position: 'absolute'}\r\n                rightStyle = {left: '67%', width: '33%', height: '100%', position: 'absolute'}\r\n                return (\r\n                    <div id = \"header\" style = {this.props.style}>\r\n                        <div id = \"headerMid\" style = {midStyle}>\r\n                            {this.props.content[0]}\r\n                        </div>\r\n                        <div id = \"headerRight\" style = {rightStyle}>\r\n                            {this.props.content[1]}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            /*Else header contains only a middle div (This is handled by the base case) */\r\n        }\r\n\r\n        /*Else header contains only a right div (This is handled by the base case) */\r\n        /*Base Case: Either no extra divs or only one (Would span the entire header) */\r\n        else {\r\n            return (\r\n                <div id = \"header\" style = {this.props.style}>\r\n                    {this.props.content[0]}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './SidebarEntry.css';\r\n\r\n/*This react component holds the necessary styling for a SidebarEntry in the Sidebar component*/\r\nexport default class SidebarEntry extends React.Component {\r\n    /*\r\n    Props:\r\n        Content:\r\n            The content to be displayed in the SidebarEntry objects (formatted as an array of list objects)\r\n    States:\r\n        None:\r\n            This react component does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the content prop to indicate what should be displayed\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        return (\r\n            <div id = \"sidebarEntry\">\r\n                <div id = \"sidebarBackground\" style = {this.props.bgStyle}></div>\r\n                {this.props.content}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SidebarEntry from './SidebarEntry';\r\nimport './Sidebar.css';\r\n\r\n/*The Sidebar react component displays the necessary styling and creates SidebarEntry objects to be displayed within it*/\r\nexport default class Sidebar extends React.Component {\r\n    /*\r\n    Props:\r\n        Content:\r\n            An array of content to be displayed in each SidebarEntry in format {title, srcLink, description}\r\n    States:\r\n        None; This react component does not change dynamically, and simply uses the content prop passed to it to indicate content and \r\n        algrebraically decides formatting based on the length of the content prop\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.bgImages = [{src: 'https://nineplanets.org/wp-content/uploads/2019/09/earth.png', height: 50, width: 50}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/mars.png', height: 30, width: 30}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/jupiter.png', height: 80, width: 80}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/saturn.png', height: 70, width: 70}, {src: 'https://nineplanets.org/wp-content/uploads/2019/09/uranus.png', height: 60, width: 60}];\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the content prop to indicate what to display and the length of the prop to indicate styling\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        var listElements = [];\r\n        var pcntPerElement = 100 / this.props.content.length;\r\n        //Gives a style to each element in such a way that each prop has an equal amount of space within the sidebar & the sidebar gets covered\r\n        for(var i = 0; i < this.props.content.length; i++) {\r\n            var currStyle = {top: `${(0 + (pcntPerElement * i)).toString()}%`, left: '0%', height: `${pcntPerElement.toString()}%`, width: '100%', position: 'absolute'};\r\n            listElements.push(<li key = {i} style = {currStyle}><SidebarEntry content = {this.props.content[i]} bgStyle = {{top: `${Math.floor(Math.random() * (100 - this.bgImages[i].height))}%`, left: `${Math.floor(Math.random() * (100 - this.bgImages[i].width))}%`, height: `${String(this.bgImages[i].height)}%`, width: `${String(this.bgImages[i].width)}%`, backgroundImage: `url(${this.bgImages[i].src})`, backgroundSize: 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', position: 'absolute'}}/></li>);\r\n        }\r\n        return (\r\n            <div id = \"sidebar\" style = {this.props.style}>\r\n                <ul>\r\n                    {listElements}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './ProjectEntry.css';\r\n\r\n/*This react component contains all necessary formatting and styling for a projectEntry in the projects page*/\r\nexport default class ProjectEntry extends React.Component {\r\n    /*\r\n    Props:\r\n        Title:\r\n            The title of the project\r\n        srcLink:\r\n            A link to the source code of the project (usually a github repo)\r\n        Description:\r\n            A brief description of the project\r\n        Image:\r\n            An optional image to be added to the project entry\r\n        Demo:\r\n            An optional demo to be added to the project entry\r\n    States:\r\n        None: This component uses props to decide the content of the project and formats based on what optional content is present\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {demoMode: false};\r\n        this.toggleDemoMode = this.toggleDemoMode.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the title, description, image, and demo props to decide what the format and content should look like\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        if(!this.state.demoMode) {\r\n            var demoText = this.props.demo ? <h3>Click <a href = \"#projects\" rel = \"noreferrer\" onClick = {this.toggleDemoMode} title = {`View the demo for ${this.props.title}`}>here</a> to view a demo of the {this.props.title} project</h3> : null;\r\n            var descriptionStyle = {top: '20%', left: '0%', height: `${this.props.demo ? '70' : '80'}%`, width: '100%'};\r\n            var demoTextStyle = this.props.demo ? {bottom: '0%', left: '0%', height: '10%', width: '100%'} : {height: '0%', width: '0%'};\r\n            var images = [];\r\n            if(this.props.imgLinks) {\r\n                var widthPerImage = 100 / this.props.imgLinks.length;\r\n                for(var i = 0; i < this.props.imgLinks.length; i++) {\r\n                    images.push(<div id = \"image\" style = {{left: `${0 + (widthPerImage * i)}%`, width: `${widthPerImage}%`, backgroundImage: `url(${this.props.imgLinks[i]})`, backgroundSize: 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat'}}></div>)\r\n                }\r\n            }\r\n            //The description should use the remainder of the space;\r\n            return (\r\n                <div id = \"projectEntry\" style = {this.props.style}>\r\n                    <div id = \"images\">\r\n                        {images}\r\n                    </div>\r\n                    <div id = \"title\">\r\n                        <h1 title = {`View source code for ${this.props.title}`}><a href = {this.props.srcLink} target = \"_blank\" rel = \"noreferrer\">{this.props.title}</a></h1>\r\n                    </div>\r\n                    <div id = \"description\" style = {descriptionStyle}>\r\n                        <h3>{this.props.description}</h3>\r\n                    </div>\r\n                    <div id = \"demoText\" style = {demoTextStyle}>\r\n                        {demoText}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div id = \"projectEntry\" style = {this.props.style}>\r\n                    <div id = \"demoEntry\">\r\n                        <div id = \"demo\">\r\n                            {this.props.demo}\r\n                        </div>\r\n                        <div id = \"returnText\">\r\n                            <h3>Click <a href = \"#projects\" rel = \"noreferrer\" onClick = {this.toggleDemoMode} title = {`Return to the description for ${this.props.title}`}>here</a> to return to the description of {this.props.title}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    toggleDemoMode() {\r\n        this.state.demoMode ? this.setState({demoMode: false}) : this.setState({demoMode: true});\r\n    }\r\n}","import React from 'react';\r\nimport ProjectEntry from './ProjectEntry.jsx';\r\nimport './ProjectMain.css';\r\n\r\n\r\n/*This react component holds the necessary styling and props for the main section of the projects page*/\r\nexport default class ProjectMain extends React.Component {\r\n    /*\r\n    Props:\r\n        List Entries:\r\n            An array of list entries for the ProjectMain component to use to fill in ProjectEntry objects within the ProjectMain component\r\n    States:\r\n        None; This component uses the listEntries prop to determine format and content and does not change dynamically\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the listEntries prop to indicate format and what should be displayed\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        var heightPerEntry =  50;\r\n        var listEntries = [];\r\n        //Populates listEntries with corresponding list elements with partitioned styles for each entry\r\n        for(var i = 0; i < this.props.listEntries.length; i++) {\r\n            var currStyle = {top: `${0 + (heightPerEntry * i)}%`, left: '0%', height: `${heightPerEntry}%`, width: '100%', position: 'absolute'};\r\n            listEntries.push(<li key = {i}><ProjectEntry title = {this.props.listEntries[i].title} srcLink = {this.props.listEntries[i].srcLink} demo = {this.props.listEntries[i].demo} imgLinks = {this.props.listEntries[i].imgLinks} description = {this.props.listEntries[i].description} style = {currStyle} /></li>)\r\n        }\r\n        return (\r\n            <div id = \"projectMain\">\r\n                <a target = \"_blank\" href = \"https://github.com/milesmaloney\" rel = \"noreferrer\">\r\n                    <div id = \"ghicon\" title = \"Redirect to Github\"></div>\r\n                </a>\r\n                <ul>\r\n                    {listEntries}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './LocalClock.css';\r\n\r\n\r\n/*The LocalClock React component creates a clock that will switch between local time and date*/\r\nexport default class LocalClock extends React.Component {\r\n    /*constructor sets the initial states and props*/\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date(), timeOrDate : 'time'};\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the timeOrDate and date states to decide what to display and in what format\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        //Populates the digitStyles with positioning for each digit in relation to the others\r\n        var digitStyles = [];\r\n        for(var i = 0; i < 10; i++) {\r\n            digitStyles.push({top: '15%', left: `${0 + i * 6}%`, height: '100%', width: '7.5%', position: 'absolute'});\r\n        }\r\n        //Rounds out any single-digit values and adds leading 0's for consistency\r\n        var digitPairs = (this.state.timeOrDate === 'time' ? this.state.date.toLocaleTimeString().replace(\" \",\"\").split(\":\") : this.state.date.toLocaleDateString().split(\"/\"))\r\n        for(var j = 0; j < digitPairs.length; j++) {\r\n            if(digitPairs[j].length % 2 === 1) {\r\n                digitPairs[j] = '0' + digitPairs[j];\r\n            }\r\n        }\r\n        //Gets the string in array format as opposed to divided digit pairs\r\n        var shownDigits = digitPairs.join(\"\").split(\"\");\r\n        return (\r\n            <div id = \"clock\" onClick = {this.changeState} title = {`Change clock to ${this.state.timeOrDate === 'time' ? 'date' : 'time'}`}>\r\n                <div id = \"digits\">\r\n                    <div id = \"digitOne\" style = {digitStyles[0]}>\r\n                        <h4>{shownDigits[0]}</h4>\r\n                    </div>\r\n                    <div id = \"digitTwo\" style = {digitStyles[1]}>\r\n                        <h4>{shownDigits[1]}</h4>\r\n                    </div>\r\n                    <div id = \"digitThree\" style = {digitStyles[2]}>\r\n                        <h4>{this.state.timeOrDate === 'time' ? ':' : '/'}</h4>\r\n                    </div>\r\n                    <div id = \"digitFour\" style = {digitStyles[3]}>\r\n                        <h4>{shownDigits[2]}</h4>\r\n                    </div>\r\n                    <div id = \"digitFive\" style = {digitStyles[4]}>\r\n                        <h4>{shownDigits[3]}</h4>\r\n                    </div>\r\n                    <div id = \"digitSix\" style = {digitStyles[5]}>\r\n                        <h4>{this.state.timeOrDate === 'time' ? ':' : '/'}</h4>\r\n                    </div>\r\n                    <div id = \"digitSeven\" style = {digitStyles[6]}>\r\n                        <h4>{shownDigits[4]}</h4>\r\n                    </div>\r\n                    <div id = \"digitEight\" style = {digitStyles[7]}>\r\n                        <h4>{shownDigits[5]}</h4>\r\n                    </div>\r\n                    <div id = \"digitNine\" style = {digitStyles[8]}>\r\n                        <h4>{shownDigits[6]}</h4>\r\n                    </div>\r\n                    <div id = \"digitTen\" style = {digitStyles[9]}>\r\n                        <h4>{shownDigits[7]}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*This function handles everything that needs to happen once the component is rendered*/\r\n    componentDidMount() {\r\n        //updates time every second\r\n        this.timeIntervalID = setInterval(() => {\r\n            this.setState({ date: new Date()})\r\n        }, 1000);\r\n\r\n        //switches between time and date every specified interval (5 seconds of date : 10 seconds of time)\r\n        this.changeState();\r\n    }\r\n\r\n    /*This function handles what should be done when the component is unrendered*/\r\n    componentWillUnmount() {\r\n        clearInterval(this.timeIntervalID);\r\n        clearInterval(this.transitionIntervalID);\r\n        clearTimeout(this.clockIntervalID);\r\n    }\r\n\r\n    /*\r\n    Parameters:\r\n        None; Only called to transition states\r\n    Returns:\r\n        None; changes the state to the complementary state and starts the corresponding timer\r\n    */\r\n    changeState() {\r\n        clearTimeout(this.clockIntervalID);\r\n        if(this.state.timeOrDate === 'time') {\r\n            this.setState({ timeOrDate: 'date' });\r\n            this.clockIntervalID = setTimeout(this.changeState, 5000);\r\n        }\r\n        else {\r\n            this.setState({ timeOrDate: 'time' });\r\n            this.clockIntervalID = setTimeout(this.changeState, 10000);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport './ImageScroller.css';\r\n\r\n\r\n\r\nexport default class ImageScroller extends React.Component {\r\n    /*\r\n    Props:\r\n        Shuffle: Decides whether or not the ImageScroller starts in shuffle mode\r\n    States:\r\n        Shuffle: Maintains whether or not the ImageScroller is scrolling through images sequentially or randomly\r\n        currentPicture: Maintains which picture is currently being displayed\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentPicture: 0, shuffle: this.props.shuffle};\r\n        this.changeImage = this.changeImage.bind(this);\r\n        this.toggleShuffle = this.toggleShuffle.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the currentPicture and shuffle states to decide the style the ImageScroller should take and the image to be displayed\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        var scrollerStyle = {backgroundImage: `url(${this.props.images[this.state.currentPicture]})`, backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"center\"};\r\n        var shuffleStyle = {backgroundImage: `url(${'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXaQf9Veq0jYowgDiQ_X9IUhw7imnG5q8McA&usqp=CAU'})`, backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"center\"};\r\n        var sliderStyle = {backgroundColor: `${this.state.shuffle ? 'rgba(0,0,0,0.5)' : 'rgba(256,256,256,0.5)'}`, top: '0%', left: `${this.state.shuffle ? '80' : '0'}%`, height: '100%', width: '20%', position: 'absolute'};\r\n        var shuffleDiv = <div></div>;\r\n        var shuffleTexture = {};\r\n        shuffleTexture = this.state.shuffle ? {backgroundColor: 'rgba(256,256,256,0.5)', zIndex: '2', color: 'rgba(0,0,0,0.5)'} : {backgroundColor: 'rgba(0,0,0,0.5)', zIndex: '2', color: 'rgba(256, 256, 256, 0.5)'};\r\n        shuffleDiv = this.state.shuffle ? <div id = \"shuffleTexture\" style = {shuffleTexture} title = \"Turn off shuffle\"><h2>ON</h2></div> : <div id = \"shuffleTexture\" style = {shuffleTexture} title = \"Turn on shuffle\"><h1>OFF</h1></div>;\r\n        return (\r\n            <div id = 'imageScrollerBackground' style = {{height: '100%', width: '100%', backgroundImage: `url(${this.props.bgSrc})`, backgroundSize: 'cover', backgroundPosition: 'center'}}>\r\n                <div id = 'ImageScroller' style = {scrollerStyle} onClick = {this.changeImage} title = {\"Continue to next image\"}>\r\n                    <div id = 'shuffleButton' onClick = {this.toggleShuffle} style = {shuffleStyle}>\r\n                        <div id = 'shuffleSlider' style = {sliderStyle}></div>\r\n                        {shuffleDiv}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    /*This function describes what the component should do once it is rendered*/\r\n    componentDidMount() {\r\n        this.imageIntervalID = setInterval(this.changeImage, 3000);\r\n    }\r\n\r\n    /*This function describes what the component should do once it is unrendered*/\r\n    componentWillUnmount() {\r\n        clearInterval(this.imageIntervalID);\r\n    }\r\n\r\n    /*\r\n    This function will change the image and reset the image change interval (handles onClick events)\r\n    Parameters:\r\n        None: Uses the shuffle and currentPicture states to decide whether or not the next image is chosen sequentially or random and what \r\n        the next image will be\r\n    Returns:\r\n        None: Changes the currentPicture state to reflect the new image we want to display\r\n    */\r\n    changeImage() {\r\n        var newImage = this.state.shuffle ? Math.floor(Math.random() * this.props.images.length) : (this.state.currentPicture  === this.props.images.length - 1 ? 0 : this.state.currentPicture + 1);\r\n        this.setState({ currentPicture: newImage});\r\n        clearInterval(this.imageIntervalID);\r\n        this.imageIntervalID = setInterval(this.changeImage, 3000);\r\n    }\r\n\r\n    /*\r\n    This function toggles the shuffle function of the ImageScroller on/off\r\n    Parameters:\r\n        None; uses the shuffle state to determine which shuffle state to change to\r\n    Returns:\r\n        None; changes shuffle state based on the current shuffle state\r\n    */\r\n    toggleShuffle() {\r\n        this.state.shuffle ? this.setState({shuffle: 0}) : this.setState({shuffle: 1});\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/img0.0535866c.jpg\";","export default __webpack_public_path__ + \"static/media/img1.16ace0ce.jpg\";","export default __webpack_public_path__ + \"static/media/img2.ee2d3c91.jpg\";","export default __webpack_public_path__ + \"static/media/img3.141d8096.jpg\";","export default __webpack_public_path__ + \"static/media/img4.2ea9a74a.jpg\";","export default __webpack_public_path__ + \"static/media/img5.4c15162a.jpg\";","export default __webpack_public_path__ + \"static/media/img6.83556862.jpg\";","export default __webpack_public_path__ + \"static/media/siteImg.d83318e1.png\";","export default __webpack_public_path__ + \"static/media/warden.c1e293ed.png\";","export default __webpack_public_path__ + \"static/media/warrior.384055ef.png\";","export default __webpack_public_path__ + \"static/media/skeleton.dc3f322c.png\";","export default __webpack_public_path__ + \"static/media/cultist.bd9b6018.png\";","export default __webpack_public_path__ + \"static/media/pArcaneMage.1f79caca.png\";","import React from 'react';\r\nimport './Page.css';\r\n//Layout imports\r\nimport Header from './Header.jsx';\r\nimport Sidebar from './Sidebar.jsx';\r\n//import Footer from './Footer.jsx';\r\nimport ProjectMain from './ProjectMain.jsx';\r\n//Component Imports\r\nimport LocalClock from './LocalClock.jsx';\r\nimport ImageScroller from './ImageScroller.jsx';\r\n//Asset Imports\r\nimport img0 from './Assets/images/img0.jpg';\r\nimport img1 from './Assets/images/img1.jpg';\r\nimport img2 from './Assets/images/img2.jpg';\r\nimport img3 from './Assets/images/img3.jpg';\r\nimport img4 from './Assets/images/img4.jpg';\r\nimport img5 from './Assets/images/img5.jpg';\r\nimport img6 from './Assets/images/img6.jpg';\r\nimport siteImg from './Assets/images/siteImg.png';\r\nimport allyWardenImg from './Assets/gameAssets/warden.png';\r\nimport allyWarriorImg from './Assets/gameAssets/warrior.png';\r\nimport enemySkeletonImg from './Assets/gameAssets/skeleton.png';\r\nimport enemyCultistImg from './Assets/gameAssets/cultist.png';\r\nimport playerArcaneMageImg from './Assets/gameAssets/pArcaneMage.png';\r\n//import cubicVoiceAIDemoVideo from './Assets/demoVideos/demoVideo.mp4';\r\n\r\n/*This react component displays a page based on the prop pageType, which specifies which page of the website is to be displayed*/\r\nexport default class Page extends React.Component {\r\n    /*\r\n    Props:\r\n        pageType: The type of page to be displayed (e.g. 'home')\r\n    States:\r\n        pageType: Maintains the pageType and manages page changes\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pageType: this.props.pageType};\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    /*\r\n    render() adjusts styles based on the page being displayed and renders the page accordingly\r\n    Parameters:\r\n        None; Uses the pageType prop to indicate which page should be displayed\r\n    Returns:\r\n        None; renders the content within the web browser\r\n    */\r\n    render() {\r\n        var mainStyle = {};\r\n        var sidebarStyle = {};\r\n        var headerStyle = {};\r\n        //Initializes the Sidebar content; any additions/changes to the Sidebar should happen here\r\n        var sidebarContent = [\r\n            <a href = \"#home\"><h3 onClick = {() => this.changeState('home')} title = \"Return to home page\">Home</h3></a>,\r\n            <a href = \"https://www.linkedin.com/in/miles-maloney-0783051b9/\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's LinkedIn profile\">LinkedIn</a>,\r\n            <a href = \"https://github.com/milesmaloney\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's Github profile\">Github</a>,\r\n            <a href = \"#projects\"><h3 onClick = {() => this.changeState('projects')} title = \"Learn about Miles's projects\">Projects</h3></a>,\r\n            <a href = \"#aboutme\"><h3 onClick = {() => this.changeState('about me')} title = \"Learn about Miles's background\">About Me</h3></a>\r\n        ];\r\n        if(this.state.pageType === 'home') {\r\n            mainStyle = {left: '20%', top: '10%', width: '80%', height: '90%'};\r\n            sidebarStyle = {left: '0%', top: '10%', width: '20%', height: '90%', borderRight: '5px groove rgba(0,0,0,1)'};\r\n            headerStyle = {left: '0%', top: '0%', width: '100%', height: '10%'};\r\n            //Initializes the array of image links for the image scroller to iterate through\r\n            var images = [img0,img1,img2,img3,img4,img5];\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,0]} content = {[<LocalClock/>, <h1 onClick = {() => this.changeState('about me')}>Miles Maloney</h1>]} style = {headerStyle}/>\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ImageScroller shuffle = {0} images = {images} bgSrc = {'https://images.pexels.com/photos/956981/milky-way-starry-sky-night-sky-star-956981.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(this.state.pageType === 'about me') {\r\n            mainStyle = {left: '20%', top: '10%', height: '90%', width: '80%', backgroundImage: 'url(https://images.pexels.com/photos/956981/milky-way-starry-sky-night-sky-star-956981.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260})', backgroundSize: 'cover', backgroundPosition: 'center'};\r\n            sidebarStyle = {left: '0%', top: '10%', width: '20%', height: '90%'};\r\n            headerStyle = {left: '0%', top: '0%', width: '100%', height: '10%'};\r\n            //Initializes the content for the about me section; any additions/changes to the About Me page should happen here\r\n            var aboutMeContent = [\r\n                <p>{'\\t'}Hello! My name is Miles Maloney, and I am a recent graduate (May 2021) of the B.S. Computer Science program at University of San Diego with a major in Computer Science and a minor in Theatre Arts. This website is a hub for you to find everything you might want to learn about my background as a software engineer. You can click the embedded links or the links in the sidebar to view my {<a href = \"https://www.linkedin.com/in/miles-maloney-0783051b9/\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's LinkedIn profile\">LinkedIn</a>} and {<a href = \"https://github.com/milesmaloney\" target = \"_blank\" rel = \"noreferrer\" title = \"View Miles's Github profile\">Github</a>} profiles as well as visit the {<a href = \"#projects\" onClick = {() => this.changeState('projects')} title = \"Learn about Miles's projects\">projects</a>} page to check out some of the projects I have worked on. I hope you have a nice day!</p>\r\n            ];\r\n            var headerRightContent = [\r\n                <div id = \"images\">\r\n                    <div style = {{right: '0%', width: '35%', backgroundImage: `url(${img6})`, backgroundSize: 'cover', backgroundPosition: 'center', backgroundRepeat: 'no-repeat'}}></div>\r\n                    <div style = {{right: '35%', width: '25%', backgroundImage: 'url(https://www.sandiego.edu/assets/global/images/logos/usd-logo-stacked-inverse.png)', backgroundSize: 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat'}}></div>\r\n                </div>\r\n            ];\r\n            return (\r\n                <div id = \"page\">\r\n                    <Header divs = {[1,1,1]} content = {[<LocalClock/>, <h1 onClick = {() => this.changeState('about me')}>Miles Maloney</h1>, headerRightContent[0]]} style = {headerStyle}/>\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <div id = \"aboutMe\">\r\n                            {aboutMeContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(this.state.pageType === 'projects') {\r\n            mainStyle = {left: '20%', top: '0%', width: '80%', height: '100%', backgroundImage: 'url(https://prod-discovery.edx-cdn.org/media/programs/card_images/e0de6882-c5d1-43f3-99e0-17e386489dca-9c3bda2df48f.jpg)', backgroundSize: 'cover', backgroundPosition: 'left'};\r\n            sidebarStyle = {left: '0%', top: '0%', width: '20%', height: '100%', outline: '2px groove rgba(128, 0, 256, 0.75)'};\r\n            //Initializes the project list entries; any additions/changes to ProjectMain should happen here\r\n            var projectList = [\r\n                {title: 'Cubic Voice AI', srcLink: 'https://github.com/milesmaloney/virtual-ticket-agent', demo: <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_1iAEM2Z0rE\" title=\"Cubic Voice AI Demo\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>, imgLinks: ['https://mycroft.ai/wp-content/uploads/2018/01/Mycroft-Logo-Square-Web-thumb.png', 'https://www.sandiego.edu/assets/global/images/logos/usd-logo-stacked-inverse.png', 'https://www.servicenow.com/content/dam/servicenow/images/customers-asset/details/logo/logo-cubic-transportation.png.imgw.720.720.jpg'], description: '\\tIn this industry-sponsored project, three fellow students from University of San Diego and I created a conversational ticket agent using natural language processing engine Mycroft AI. This virtual ticket agent was built in Python on Raspberry Pi hardware, and used SQLite3 for database purposes. It has the functionalities of creating an account, buying a pass, routing you to your destination via transit, and checking your account balance.'},\r\n                {title: 'Turn-based Game', srcLink: 'https://github.com/milesmaloney/Game-Builder', demo: <h1>{'\\t'}The demo for this project is currently unavailable due to an in-progress conversion from a command line interface to a React.js interface. In the meantime, you can run this project through the command line by following the instructions in the <a href = 'https://github.com/milesmaloney/Game-Builder' target = \"_blank\" rel = \"noreferrer\">source code repository</a>'s README file.</h1> , imgLinks: [allyWardenImg, allyWarriorImg, playerArcaneMageImg, enemySkeletonImg, enemyCultistImg], description: '\\tIn this javascript project, I decided to create a game in order to further develop my programming skills and learn more about javascript. This turn-based game allows a user to select a name and class and battle alongside AI allies against AI enemies. I plan to include a demo when I am finished making the game compatible with React. In the meantime, you may view the source code by clicking the title and run the game from the command line if you\\'d like.'},\r\n                {title: 'React Portfolio Website', srcLink: 'https://github.com/milesmaloney/React-Website', demo: <h1>{'\\t'}You are currently browsing the React Portfolio Website project. To view its functionalities in more detail, you can explore the website and see what happens when you click or hover on each and every part of the site.</h1>, imgLinks: ['https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png', siteImg] , description: '\\tI created this React website in response to the surprising amount of demand for web developers in the current job market. I found that this project was very helpful in understanding front-end technologies and the challenges that come with them, as well as the surprising convenience of many features of React. You are currently viewing this exact website, which was built from scratch using React.js.'},\r\n            ];\r\n            return (\r\n                <div id = \"page\">\r\n                    <Sidebar content = {sidebarContent} style = {sidebarStyle}/>\r\n                    <div id = \"main\" style = {mainStyle}>\r\n                        <ProjectMain listEntries = {projectList}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*\r\n    changeState() handles transitions between pages (e.g. moving from home page to about me page)\r\n    Parameters:\r\n        newState: The state to be transitioned to\r\n    Returns:\r\n        None; changes the state.pageType value to the pageType specified by newState\r\n    */\r\n    changeState(newState) {\r\n        switch(newState) {\r\n            case 'home':\r\n                this.setState({pageType: 'home'});\r\n                break;\r\n            case 'about me':\r\n                this.setState({pageType: 'about me'});\r\n                break;\r\n            case 'projects':\r\n                this.setState({pageType: 'projects'});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","import './App.css';\r\nimport Page from './Page.jsx';\r\n\r\n/*This function serves as a container to render our app in*/\r\nfunction App() {\r\n  return (\r\n    <div id = \"App\">\r\n      <Page pageType = 'home'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}